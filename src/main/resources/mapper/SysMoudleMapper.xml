<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="nuc.mapper.SysMoudleMapper" >
  <resultMap id="BaseResultMap" type="nuc.entity.SysMoudle" >
    <result column="module_id" property="moduleId" jdbcType="INTEGER" />
    <result column="module_name" property="moduleName" jdbcType="VARCHAR" />
    <result column="module_parent" property="moduleParent" jdbcType="INTEGER" />
    <result column="module_hierarchy" property="moduleHierarchy" jdbcType="VARCHAR" />
    <result column="module_level" property="moduleLevel" jdbcType="INTEGER" />
    <result column="icon_name" property="iconName" jdbcType="VARCHAR" />
    <result column="module_url" property="moduleUrl" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    module_id, module_name, module_parent, module_hierarchy, module_level, icon_name, 
    module_url
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="nuc.entity.SysMoudleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_moudle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="nuc.entity.SysMoudleExample" >
    delete from sys_moudle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="nuc.entity.SysMoudle" >
    insert into sys_moudle (module_id, module_name, module_parent, 
      module_hierarchy, module_level, icon_name, 
      module_url)
    values (#{moduleId,jdbcType=INTEGER}, #{moduleName,jdbcType=VARCHAR}, #{moduleParent,jdbcType=INTEGER}, 
      #{moduleHierarchy,jdbcType=VARCHAR}, #{moduleLevel,jdbcType=INTEGER}, #{iconName,jdbcType=VARCHAR}, 
      #{moduleUrl,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="nuc.entity.SysMoudle" >
    insert into sys_moudle
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="moduleId != null" >
        module_id,
      </if>
      <if test="moduleName != null" >
        module_name,
      </if>
      <if test="moduleParent != null" >
        module_parent,
      </if>
      <if test="moduleHierarchy != null" >
        module_hierarchy,
      </if>
      <if test="moduleLevel != null" >
        module_level,
      </if>
      <if test="iconName != null" >
        icon_name,
      </if>
      <if test="moduleUrl != null" >
        module_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="moduleId != null" >
        #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="moduleName != null" >
        #{moduleName,jdbcType=VARCHAR},
      </if>
      <if test="moduleParent != null" >
        #{moduleParent,jdbcType=INTEGER},
      </if>
      <if test="moduleHierarchy != null" >
        #{moduleHierarchy,jdbcType=VARCHAR},
      </if>
      <if test="moduleLevel != null" >
        #{moduleLevel,jdbcType=INTEGER},
      </if>
      <if test="iconName != null" >
        #{iconName,jdbcType=VARCHAR},
      </if>
      <if test="moduleUrl != null" >
        #{moduleUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="nuc.entity.SysMoudleExample" resultType="java.lang.Integer" >
    select count(*) from sys_moudle
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_moudle
    <set >
      <if test="record.moduleId != null" >
        module_id = #{record.moduleId,jdbcType=INTEGER},
      </if>
      <if test="record.moduleName != null" >
        module_name = #{record.moduleName,jdbcType=VARCHAR},
      </if>
      <if test="record.moduleParent != null" >
        module_parent = #{record.moduleParent,jdbcType=INTEGER},
      </if>
      <if test="record.moduleHierarchy != null" >
        module_hierarchy = #{record.moduleHierarchy,jdbcType=VARCHAR},
      </if>
      <if test="record.moduleLevel != null" >
        module_level = #{record.moduleLevel,jdbcType=INTEGER},
      </if>
      <if test="record.iconName != null" >
        icon_name = #{record.iconName,jdbcType=VARCHAR},
      </if>
      <if test="record.moduleUrl != null" >
        module_url = #{record.moduleUrl,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_moudle
    set module_id = #{record.moduleId,jdbcType=INTEGER},
      module_name = #{record.moduleName,jdbcType=VARCHAR},
      module_parent = #{record.moduleParent,jdbcType=INTEGER},
      module_hierarchy = #{record.moduleHierarchy,jdbcType=VARCHAR},
      module_level = #{record.moduleLevel,jdbcType=INTEGER},
      icon_name = #{record.iconName,jdbcType=VARCHAR},
      module_url = #{record.moduleUrl,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>