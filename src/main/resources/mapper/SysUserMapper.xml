<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="nuc.mapper.SysUserMapper" >
  <resultMap id="BaseResultMap" type="nuc.entity.SysUser" >
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="login_password" property="loginPassword" jdbcType="VARCHAR" />
    <result column="role_priv_level" property="rolePrivLevel" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="if_online" property="ifOnline" jdbcType="BIT" />
    <result column="is_locked" property="isLocked" jdbcType="BIT" />
    <result column="user_expired" property="userExpired" jdbcType="TIMESTAMP" />
    <result column="user_mobile" property="userMobile" jdbcType="VARCHAR" />
    <result column="user_email" property="userEmail" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, user_name, login_password, role_priv_level, role_id, if_online, is_locked, 
    user_expired, user_mobile, user_email
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="nuc.entity.SysUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="nuc.entity.SysUserExample" >
    delete from sys_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="nuc.entity.SysUser" >
    insert into sys_user (user_id, user_name, login_password, 
      role_priv_level, role_id, if_online, 
      is_locked, user_expired, user_mobile, 
      user_email)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{loginPassword,jdbcType=VARCHAR}, 
      #{rolePrivLevel,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{ifOnline,jdbcType=BIT}, 
      #{isLocked,jdbcType=BIT}, #{userExpired,jdbcType=TIMESTAMP}, #{userMobile,jdbcType=VARCHAR}, 
      #{userEmail,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="nuc.entity.SysUser" >
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="loginPassword != null" >
        login_password,
      </if>
      <if test="rolePrivLevel != null" >
        role_priv_level,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="ifOnline != null" >
        if_online,
      </if>
      <if test="isLocked != null" >
        is_locked,
      </if>
      <if test="userExpired != null" >
        user_expired,
      </if>
      <if test="userMobile != null" >
        user_mobile,
      </if>
      <if test="userEmail != null" >
        user_email,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null" >
        #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="rolePrivLevel != null" >
        #{rolePrivLevel,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="ifOnline != null" >
        #{ifOnline,jdbcType=BIT},
      </if>
      <if test="isLocked != null" >
        #{isLocked,jdbcType=BIT},
      </if>
      <if test="userExpired != null" >
        #{userExpired,jdbcType=TIMESTAMP},
      </if>
      <if test="userMobile != null" >
        #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null" >
        #{userEmail,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="nuc.entity.SysUserExample" resultType="java.lang.Integer" >
    select count(*) from sys_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_user
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.loginPassword != null" >
        login_password = #{record.loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.rolePrivLevel != null" >
        role_priv_level = #{record.rolePrivLevel,jdbcType=INTEGER},
      </if>
      <if test="record.roleId != null" >
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.ifOnline != null" >
        if_online = #{record.ifOnline,jdbcType=BIT},
      </if>
      <if test="record.isLocked != null" >
        is_locked = #{record.isLocked,jdbcType=BIT},
      </if>
      <if test="record.userExpired != null" >
        user_expired = #{record.userExpired,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userMobile != null" >
        user_mobile = #{record.userMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.userEmail != null" >
        user_email = #{record.userEmail,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_user
    set user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      login_password = #{record.loginPassword,jdbcType=VARCHAR},
      role_priv_level = #{record.rolePrivLevel,jdbcType=INTEGER},
      role_id = #{record.roleId,jdbcType=INTEGER},
      if_online = #{record.ifOnline,jdbcType=BIT},
      is_locked = #{record.isLocked,jdbcType=BIT},
      user_expired = #{record.userExpired,jdbcType=TIMESTAMP},
      user_mobile = #{record.userMobile,jdbcType=VARCHAR},
      user_email = #{record.userEmail,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>